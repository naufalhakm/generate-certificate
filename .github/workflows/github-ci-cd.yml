name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

  build-and-deploy:
    name: Build Docker and Deploy to GCP VM
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: naufalhakm/generate-certificate:latest

    # - name: Deploy to GCP VM
    #   run: |
    #     ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_SSH_USERNAME }}@${{ secrets.GCE_INSTANCE_IP }} << 'EOF'
    #     docker-compose -f /path/to/docker-compose.yml pull
    #     docker-compose -f /path/to/docker-compose.yml up -d --remove-orphans
    #     EOF
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.GCE_INSTANCE_IP }}
        username: ${{ secrets.GCE_SSH_USERNAME }}
        key: ${{ secrets.KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        port: ${{ secrets.PORT }}
        script: |
          cd generate-certificate
          git pull origin
          docker-compose up -d --force-recreate
